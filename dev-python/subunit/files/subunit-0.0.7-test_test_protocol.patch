http://bazaar.launchpad.net/~subunit/subunit/trunk/revision/155
http://bazaar.launchpad.net/~subunit/subunit/trunk/revision/157

--- python/subunit/tests/test_test_protocol.py
+++ python/subunit/tests/test_test_protocol.py
@@ -22,11 +22,18 @@
 from testtools.compat import _b, _u, BytesIO, StringIO
 from testtools.content import Content, TracebackContent
 from testtools.content_type import ContentType
-from testtools.tests.helpers import (
-    Python26TestResult,
-    Python27TestResult,
-    ExtendedTestResult,
-    )
+try:
+    from testtools.testresult.doubles import (
+        Python26TestResult,
+        Python27TestResult,
+        ExtendedTestResult,
+        )
+except ImportError:
+    from testtools.tests.helpers import (
+        Python26TestResult,
+        Python27TestResult,
+        ExtendedTestResult,
+        )
 
 import subunit
 from subunit import _remote_exception_str, _remote_exception_str_chunked
@@ -95,9 +102,9 @@
                          [(an_error, _remote_exception_str + '\n')])
         self.assertEqual(
             client.failures,
-            [(bing, _remote_exception_str + ": Text attachment: traceback\n"
-                "------------\nfoo.c:53:ERROR invalid state\n"
-                "------------\n\n")])
+            [(bing, _remote_exception_str + 
+                ": foo.c:53:ERROR invalid state\n"
+                "\n")])
         self.assertEqual(client.testsRun, 3)
 
     def test_non_test_characters_forwarded_immediately(self):
@@ -552,9 +559,9 @@
                 value = details
             else:
                 if error_message is not None:
-                    value = subunit.RemoteError(_u("Text attachment: traceback\n"
-                        "------------\n") + _u(error_message) +
-                        _u("------------\n"))
+                    if not len(error_message.strip()):
+                        error_message = _u("Empty attachments:\n  traceback\n")
+                    value = subunit.RemoteError(_u(error_message))
                 else:
                     value = subunit.RemoteError()
             self.assertEqual([
