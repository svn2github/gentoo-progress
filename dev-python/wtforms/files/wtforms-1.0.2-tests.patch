https://bitbucket.org/simplecodes/wtforms/issue/109
https://bitbucket.org/simplecodes/wtforms/issue/111
https://bitbucket.org/simplecodes/wtforms/changeset/396390d206ee
https://bitbucket.org/simplecodes/wtforms/changeset/7f8f45e7ea99

--- tests/ext_django/tests.py
+++ tests/ext_django/tests.py
@@ -14,7 +14,20 @@
 # work either.
 
 from django.conf import settings
-settings.configure(INSTALLED_APPS=['ext_django', 'wtforms.ext.django'], DATABASE_ENGINE='sqlite3', TEST_DATABASE_NAME=':memory:')
+settings.configure(
+    INSTALLED_APPS = ['ext_django', 'wtforms.ext.django'],
+    # Django 1.0 to 1.3
+    DATABASE_ENGINE = 'sqlite3',
+    TEST_DATABASE_NAME = ':memory:',
+
+    # Django 1.4
+    DATABASES = {
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:'
+        }
+    }
+)
 
 from django.db import connection
 connection.creation.create_test_db(verbosity=0)
--- tests/ext_sqlalchemy.py
+++ tests/ext_sqlalchemy.py
@@ -223,20 +223,20 @@
     def test_include_pk(self):
         form_class = model_form(self.Student, self.sess, exclude_pk=False)
         student_form = form_class()
-        self.assertIn('id', student_form._fields)
+        self.assertTrue('id' in student_form._fields)
 
     def test_exclude_pk(self):
         form_class = model_form(self.Student, self.sess, exclude_pk=True)
         student_form = form_class()
-        self.assertNotIn('id', student_form._fields)
+        self.assertFalse('id' in student_form._fields)
 
     def test_exclude_fk(self):
         student_form = model_form(self.Student, self.sess)()
-        self.assertNotIn('current_school_id', student_form._fields)
+        self.assertFalse('current_school_id' in student_form._fields)
 
     def test_include_fk(self):
         student_form = model_form(self.Student, self.sess, exclude_fk=False)()
-        self.assertIn('current_school_id', student_form._fields)
+        self.assertTrue('current_school_id' in student_form._fields)
 
     def test_convert_many_to_one(self):
         student_form = model_form(self.Student, self.sess)()
